<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Weekly Status | swpd.me]]></title>
  <link href="http://swpd.github.io/blog/categories/weekly-status/atom.xml" rel="self"/>
  <link href="http://swpd.github.io/"/>
  <updated>2013-09-16T09:44:15+08:00</updated>
  <id>http://swpd.github.io/</id>
  <author>
    <name><![CDATA[swpd]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[GSoC Status: Week 13]]></title>
    <link href="http://swpd.github.io/blog/2013/09/16/gsoc-status-week-13/"/>
    <updated>2013-09-16T09:14:00+08:00</updated>
    <id>http://swpd.github.io/blog/2013/09/16/gsoc-status-week-13</id>
    <content type="html"><![CDATA[<p><img src="/images/blog/writing.jpg"></p>

<p>This week I made some minor improvments to the Duda MariaDB package in order to
shutdown client socket correctly if the database connection closes unexpectedly.
Pagination had been added to the demo web services of both packages to make the
examples more complete.</p>

<p>Meanwhile, the adventure of Monkey internals continued and I had finished two
more sections of the blog (Scheduler and Clock), as I promised last week. If you
find this interesting or want to make some contribution, please don&rsquo;t hesitate
to write me emails :&ndash;).</p>

<p>For the next week, the packages will start to be merged into the source base of
duda, I will keep my eyes on that. Also, I will prepare for the hard &lsquo;pencil down&rsquo;
date, though no big changes will happen to the code bases, there might be room
for tiny improvments. Last but not least, I will carry on with the internal blog,
two more sections are expected to be finished by the end of next week.</p>

<!-- more -->

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GSoC Status: Week 11-12]]></title>
    <link href="http://swpd.github.io/blog/2013/09/08/gsoc-status-week-11-12/"/>
    <updated>2013-09-08T10:37:00+08:00</updated>
    <id>http://swpd.github.io/blog/2013/09/08/gsoc-status-week-11-12</id>
    <content type="html"><![CDATA[<p><img src="/images/blog/home.jpg">
In the first half of week 11, I spent most of my time completing the documentation
of the PostgreSQL package. You may check it out <a href="https://github.com/swpd/duda_postgresql">here</a>.
Bugs and typos were fixed for that package as well.</p>

<p>After that I travelled back home to take a short break and stay with my dear family.
For this reason week 12 was mostly occupied by family and friends. It is always
comfortable and enjoyable when you can kick back and talk about your recent status
with them!</p>

<p>Before I went home, I intended to make some fixes and continue the blog post with
the working box in my apartment via VPN. Unfortunately it didn&rsquo;t work out and all
I got at home was a pretty old machine which can hardly open more than 4 tabs
when browsing web. That&rsquo;s why this post came late.</p>

<p>For next week I will be improving the codebases, both bug fixing and documentation
polishing, as the final evaluation is coming. And two more sections of the internal
blog will be accomplished.</p>

<!-- more -->

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GSoC Status: Week 10]]></title>
    <link href="http://swpd.github.io/blog/2013/08/26/gsoc-status-week-10/"/>
    <updated>2013-08-26T12:04:00+08:00</updated>
    <id>http://swpd.github.io/blog/2013/08/26/gsoc-status-week-10</id>
    <content type="html"><![CDATA[<p><img src="/images/blog/war_elephant.jpg">
This week the PostgreSQL package was completed, connection pooling support was
successfully added. Meanwhile, the sibling functions that are used for querying
and escaping string was also introduced into the package to provide more choice
for the user.</p>

<p>In order to demonstrate the usage of the PostgreSQL package, I have created
another duda web service <a href="https://github.com/swpd/duda_postgresql_demo">duda_postgresql_demo</a>
on Github, if you ever used the mariadb_demo web service, you&rsquo;ll find it pretty
similar. Check it out for your interest.</p>

<p>From now on till the end of GSoC I will test the two packages I am in charge of
and fix some potential bugs to make them more stable. The documentation of
PostgreSQL package will be completed in no time. Last but not least, I shall
continue the <a href="http://swpd.github.io/blog/2013/05/18/monkey-http-daemon-internals/">blog</a>
about Monkey internals that I haven&rsquo;t finished yet.</p>

<!-- more -->

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GSoC Status: Week 9]]></title>
    <link href="http://swpd.github.io/blog/2013/08/18/gsoc-status-week-9/"/>
    <updated>2013-08-18T19:16:00+08:00</updated>
    <id>http://swpd.github.io/blog/2013/08/18/gsoc-status-week-9</id>
    <content type="html"><![CDATA[<p><img src="/images/blog/serious_elephant.jpg">
This week I am happy to announce the basic PostgreSQL package can pass the build
process and integrate with Monkey. The asynchronous query handling have been added
to the package and serveral bugs got fixed. I wrote some tests to make sure it really
worked out. You may want to have a look at the <a href="https://github.com/swpd/duda_postgresql">package</a>.</p>

<p>Another stuff worth to mention about is I got a bug report for my MariaDB package
(thanks to <code>C1H1O3</code> on the irc), it is a good sign that someone is evaluating and
testing the package because that will make it more stable and robust.</p>

<p>I tried to reproduce the bug and traced the code with <code>gdb</code>, after several tests
I figured out the MariaDB package seemed to work properly. I wondered it might be
a bug from the Duda framework so I set up another tests without using MariaDB
package and could still reproduce the bug. It turned out to be a bug hidden in
Duda and I have reported it on the irc, <code>edsiper</code> will take care of it and I will
see what I can help.</p>

<p>C1H1O3 also advised me to use configuration file for connection pool parameters,
which seems like a good idea as we don&rsquo;t need to rebuild the application if all
we need is just to change the parameters.</p>

<p>Here are some tasks I will be hanlding for the next week:
* add connection pooling support to the PostgreSQL package
* as there are often more than one function to do the same thing in PostgreSQL
client libray <code>libpq</code>, I will add the sibling functions to the APIs of package to
make it more flexible.</p>

<!-- more -->

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GSoC Status: Week 8]]></title>
    <link href="http://swpd.github.io/blog/2013/08/12/gsoc-status-week-8/"/>
    <updated>2013-08-12T08:59:00+08:00</updated>
    <id>http://swpd.github.io/blog/2013/08/12/gsoc-status-week-8</id>
    <content type="html"><![CDATA[<p><img src="/images/blog/fat_elephant.jpg">
This week the draft APIs of PostgreSQL package has come out. You may check it out
on my <a href="https://github.com/swpd/duda_postgresql">Github</a>, feel free to leave me a
comment.</p>

<p>The APIs are modeled after the previous <a href="https://github.com/swpd/duda_mariadb">MariaDB</a>
package. By doing so we can hide the differences between MariaDB and PostgreSQL
from our users and let the packages deal with the details.</p>

<p>The asynchronous APIs of PostgreSQL provide a more flexible way to issue non-blocking
connection and query, for example you can use a string array to specify the connection
options you are interested and leave others as default. Currently I am working on
integraing the APIs with the event handling module of Duda.</p>

<p>Next week I will mainly focus on the asynchronous handling implementation of the
PostgreSQL package.</p>

<!-- more -->

]]></content>
  </entry>
  
</feed>
