<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: GSoC | swpd.me]]></title>
  <link href="http://swpd.github.io/blog/categories/gsoc/atom.xml" rel="self"/>
  <link href="http://swpd.github.io/"/>
  <updated>2013-08-26T13:18:17+08:00</updated>
  <id>http://swpd.github.io/</id>
  <author>
    <name><![CDATA[swpd]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[GSoC Status: Week 10]]></title>
    <link href="http://swpd.github.io/blog/2013/08/26/gsoc-status-week-10/"/>
    <updated>2013-08-26T12:04:00+08:00</updated>
    <id>http://swpd.github.io/blog/2013/08/26/gsoc-status-week-10</id>
    <content type="html"><![CDATA[<p><img src="/images/blog/war_elephant.jpg">
This week the PostgreSQL package was completed, connection pooling support was
successfully added. Meanwhile, the sibling functions that are used for querying
and escaping string was also introduced into the package to provide more choice
for the user.</p>

<p>In order to demonstrate the usage of the PostgreSQL package, I have created
another duda web service <a href="https://github.com/swpd/duda_postgresql_demo">duda_postgresql_demo</a>
on Github, if you ever used the mariadb_demo web service, you&rsquo;ll find it pretty
similar. Check it out for your interest.</p>

<p>From now on till the end of GSoC I will test the two packages I am in charge of
and fix some potential bugs to make them more stable. The documentation of
PostgreSQL package will be completed in no time. Last but not least, I shall
continue the <a href="http://swpd.github.io/blog/2013/05/18/monkey-http-daemon-internals/">blog</a>
about Monkey internals that I haven&rsquo;t finished yet.</p>

<!-- more -->

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GSoC Status: Week 9]]></title>
    <link href="http://swpd.github.io/blog/2013/08/18/gsoc-status-week-9/"/>
    <updated>2013-08-18T19:16:00+08:00</updated>
    <id>http://swpd.github.io/blog/2013/08/18/gsoc-status-week-9</id>
    <content type="html"><![CDATA[<p><img src="/images/blog/serious_elephant.jpg">
This week I am happy to announce the basic PostgreSQL package can pass the build
process and integrate with Monkey. The asynchronous query handling have been added
to the package and serveral bugs got fixed. I wrote some tests to make sure it really
worked out. You may want to have a look at the <a href="https://github.com/swpd/duda_postgresql">package</a>.</p>

<p>Another stuff worth to mention about is I got a bug report for my MariaDB package
(thanks to <code>C1H1O3</code> on the irc), it is a good sign that someone is evaluating and
testing the package because that will make it more stable and robust.</p>

<p>I tried to reproduce the bug and traced the code with <code>gdb</code>, after several tests
I figured out the MariaDB package seemed to work properly. I wondered it might be
a bug from the Duda framework so I set up another tests without using MariaDB
package and could still reproduce the bug. It turned out to be a bug hidden in
Duda and I have reported it on the irc, <code>edsiper</code> will take care of it and I will
see what I can help.</p>

<p>C1H1O3 also advised me to use configuration file for connection pool parameters,
which seems like a good idea as we don&rsquo;t need to rebuild the application if all
we need is just to change the parameters.</p>

<p>Here are some tasks I will be hanlding for the next week:
* add connection pooling support to the PostgreSQL package
* as there are often more than one function to do the same thing in PostgreSQL
client libray <code>libpq</code>, I will add the sibling functions to the APIs of package to
make it more flexible.</p>

<!-- more -->

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GSoC Status: Week 8]]></title>
    <link href="http://swpd.github.io/blog/2013/08/12/gsoc-status-week-8/"/>
    <updated>2013-08-12T08:59:00+08:00</updated>
    <id>http://swpd.github.io/blog/2013/08/12/gsoc-status-week-8</id>
    <content type="html"><![CDATA[<p><img src="/images/blog/fat_elephant.jpg">
This week the draft APIs of PostgreSQL package has come out. You may check it out
on my <a href="https://github.com/swpd/duda_postgresql">Github</a>, feel free to leave me a
comment.</p>

<p>The APIs are modeled after the previous <a href="https://github.com/swpd/duda_mariadb">MariaDB</a>
package. By doing so we can hide the differences between MariaDB and PostgreSQL
from our users and let the packages deal with the details.</p>

<p>The asynchronous APIs of PostgreSQL provide a more flexible way to issue non-blocking
connection and query, for example you can use a string array to specify the connection
options you are interested and leave others as default. Currently I am working on
integraing the APIs with the event handling module of Duda.</p>

<p>Next week I will mainly focus on the asynchronous handling implementation of the
PostgreSQL package.</p>

<!-- more -->

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GSoC Status: Week 7]]></title>
    <link href="http://swpd.github.io/blog/2013/08/03/gsoc-status-week-7/"/>
    <updated>2013-08-03T20:32:00+08:00</updated>
    <id>http://swpd.github.io/blog/2013/08/03/gsoc-status-week-7</id>
    <content type="html"><![CDATA[<p><img src="/images/blog/monkey_and_elephant.jpg">
This week my effort was mainly focused on developing a web service to demonstrate
usage of the MariaDB package and completing the documentation. You may check it
out <a href="https://github.com/swpd/duda_mariadb_demo">here</a>.</p>

<p>I was also getting myself familiar with the C library APIs of PostgreSQL, the
community comes with comprehensive and clear documentation. For the next couple
days, the documentation website will undoubtedly be my most visited. What&rsquo;s more,
the library comes with native non-blocking support. It rocks, elephant!</p>

<p>This morning I also got an email from Google that announced my successfully pass
of the midterm evaluation. It is an amazing moment and I would like to share with
those that ever helped and guided me.</p>

<p>For the next week, I will get my hands dirty in the Duda PostgreSQL package by
designing the basic data structures and function prototypes.</p>

<!-- more -->

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GSoC Status: Week 6]]></title>
    <link href="http://swpd.github.io/blog/2013/07/28/gsoc-status-week-6/"/>
    <updated>2013-07-28T00:22:00+08:00</updated>
    <id>http://swpd.github.io/blog/2013/07/28/gsoc-status-week-6</id>
    <content type="html"><![CDATA[<p><img src="/images/blog/seal_wins.jpg">
This week the Duda MariaDB package was completed. I spent some time on reimplementing
the connection pooling due to my misunderstanding of it. The new version maintain
a pool of connections that are either connected or connecting. And a pool is
associated with a web service instead of a thread. The pool shall be defined as
global in the web service, but due to the lack of isolate namespace there can&rsquo;t
be same pool names in differenct web services.</p>

<p>The documentation of MariaDB package was also updated to explain the usage of it.
And for those who want to install this package, please refer to the <a href="https://github.com/swpd/monkey">Monkey fork</a>
of my Github. Clone that repo and checkout to mariadb branch, environment needed
to build this package is set up for you. (Notice: you need <code>cmake</code> and <code>libaio</code>
to make things work, so don&rsquo;t forget to install them.) More information can be
found <a href="https://github.com/swpd/duda_mariadb/blob/master/README.md">here</a>.</p>

<p>Currently I am working on an example to demonstrate the usage of this package. It
will be finished very soon.</p>

<p>For next week I will make some potential improvemnts to MariaDB package, start
to review the asynchronous APIs of PostgreSQL and do some experiments.</p>

<!-- more -->

]]></content>
  </entry>
  
</feed>
